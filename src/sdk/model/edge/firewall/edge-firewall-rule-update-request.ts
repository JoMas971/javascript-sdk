import { EdgeFirewallRuleUpdateRequestJson } from './__json__/edge-firewall-rule-update-request-json';

/**
 * Edge Firewall Rule Update Request
 */
/* istanbul ignore next: autogenerated */
export class EdgeFirewallRuleUpdateRequest {

  private readonly _json: EdgeFirewallRuleUpdateRequestJson;

  constructor(edgeFirewallRuleUpdateRequest: EdgeFirewallRuleUpdateRequest);
  constructor(edgeFirewallRuleUpdateRequestJson: EdgeFirewallRuleUpdateRequestJson);
  constructor(description: string, destinationIp: string, destinationPortRange: string,
              direction: string, icmpSubType: string, id: string, policy: string, port: number,
              protocols: Array<string>, sourceIp: string, sourcePort: number, sourcePortRange: string,
              loggingEnabled: boolean, enabled: boolean, matchOnTranslate: boolean, idx: number);
  constructor(firstParam: string | EdgeFirewallRuleUpdateRequest | EdgeFirewallRuleUpdateRequestJson,
              destinationIp?: string, destinationPortRange?: string, direction?: string, icmpSubType?: string,
              id?: string, policy?: string, port?: number, protocols?: Array<string>, sourceIp?: string,
              sourcePort?: number, sourcePortRange?: string, loggingEnabled?: boolean, enabled?: boolean,
              matchOnTranslate?: boolean, idx?: number) {
    if (typeof firstParam === 'string') {
            // Parameters constructor
      this._json = {
        description: firstParam,
        destination_ip: destinationIp,
        destination_port_range: destinationPortRange,
        direction: direction,
        icmp_sub_type: icmpSubType,
        id: id,
        policy: policy,
        port: port,
        protocols: protocols,
        source_ip: sourceIp,
        source_port: sourcePort,
        source_port_range: sourcePortRange,
        logging_enabled: loggingEnabled,
        enabled: enabled,
        match_on_translate: matchOnTranslate,
        idx: idx
      } as EdgeFirewallRuleUpdateRequestJson;
    } else if (firstParam instanceof EdgeFirewallRuleUpdateRequest) {
            // Copy constructor
      this._json = (firstParam as EdgeFirewallRuleUpdateRequest).json;
    } else {
            // Json or empty constructor
      this._json = (firstParam || {}) as EdgeFirewallRuleUpdateRequestJson;
    }
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get destination ip.
   * @returns {string}
   */
  get destinationIp(): string {
    return this._json.destination_ip;
  }

  /**
   * Get destination port range.
   * @returns {string}
   */
  get destinationPortRange(): string {
    return this._json.destination_port_range;
  }

  /**
   * Get direction.
   * @returns {string}
   */
  get direction(): string {
    return this._json.direction;
  }

  /**
   * Get icmp sub type.
   * @returns {string}
   */
  get icmpSubType(): string {
    return this._json.icmp_sub_type;
  }

  /**
   * Get id.
   * @returns {string}
   */
  get id(): string {
    return this._json.id;
  }

  /**
   * Get policy.
   * @returns {string}
   */
  get policy(): string {
    return this._json.policy;
  }

  /**
   * Get port.
   * @returns {number}
   */
  get port(): number {
    return this._json.port;
  }

  /**
   * Get protocols.
   * @returns {Array<string>}
   */
  get protocols(): Array<string> {
    return this._json.protocols;
  }

  /**
   * Get source ip.
   * @returns {string}
   */
  get sourceIp(): string {
    return this._json.source_ip;
  }

  /**
   * Get source port.
   * @returns {number}
   */
  get sourcePort(): number {
    return this._json.source_port;
  }

  /**
   * Get source port range.
   * @returns {string}
   */
  get sourcePortRange(): string {
    return this._json.source_port_range;
  }

  /**
   * Get logging enabled.
   * @returns {boolean}
   */
  get loggingEnabled(): boolean {
    return this._json.logging_enabled;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get match on translate.
   * @returns {boolean}
   */
  get matchOnTranslate(): boolean {
    return this._json.match_on_translate;
  }

  /**
   * Get idx.
   * @returns {number}
   */
  get idx(): number {
    return this._json.idx;
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeFirewallRuleUpdateRequestJson}
   */
  get json(): EdgeFirewallRuleUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
