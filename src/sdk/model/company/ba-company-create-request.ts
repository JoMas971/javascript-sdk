import { BaCompanyCreateRequestJson } from './__json__/ba-company-create-request-json';

/**
 * BaCompany creation request.
 */
/* istanbul ignore next: autogenerated */
export class BaCompanyCreateRequest {

  private readonly _json: BaCompanyCreateRequestJson;

  constructor(baCompanyCreateRequest: BaCompanyCreateRequest);
  constructor(baCompanyCreateRequestJson: BaCompanyCreateRequestJson);
  constructor(password: string, name: string, notes: string, storageGb: number);
  constructor(firstParam: string | BaCompanyCreateRequest | BaCompanyCreateRequestJson,
              name?: string, notes?: string, storageGb?: number) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        password: firstParam,
        name: name,
        notes: notes,
        storage_gb: storageGb
      } as BaCompanyCreateRequestJson;
    } else if (firstParam instanceof BaCompanyCreateRequest) {
      // Copy constructor
      this._json = (firstParam as BaCompanyCreateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as BaCompanyCreateRequestJson;
    }
  }

  /**
   * Get password.
   * @returns {string}
   */
  get password(): string {
    return this._json.password;
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get notes.
   * @returns {string}
   */
  get notes(): string {
    return this._json.notes;
  }

  /**
   * Get storage gb.
   * @returns {number}
   */
  get storageGb(): number {
    return this._json.storage_gb;
  }

  /**
   * Get the json representation of this class.
   * @returns {BaCompanyCreateRequestJson}
   */
  get json(): BaCompanyCreateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
