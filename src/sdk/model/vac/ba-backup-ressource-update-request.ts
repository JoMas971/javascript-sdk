/* istanbul ignore next: autogenerated */
import { BaBackupResourceUpdateRequestJson } from './__json__/ba-backup-ressource-update-request';

export class BaBackupResourceUpdateRequest {

  private readonly _json: BaBackupResourceUpdateRequestJson;

  constructor(baBackupResourceUpdateRequest: BaBackupResourceUpdateRequest);
  constructor(baBackupResourceUpdateRequestJson: BaBackupResourceUpdateRequestJson);
  constructor(storageQuota: number);
  constructor(firstParam: number | BaBackupResourceUpdateRequest | BaBackupResourceUpdateRequestJson) {
    if (typeof firstParam === 'number') {
      // Parameters constructor
      this._json = {
        storage_quota: firstParam
      } as BaBackupResourceUpdateRequestJson;
    } else if (firstParam instanceof BaBackupResourceUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as BaBackupResourceUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as BaBackupResourceUpdateRequestJson;
    }
  }

  /**
   * Get storage quota.
   * @returns {number}
   */
  get storageQuota(): number {
    return this._json.storage_quota;
  }

  /**
   * Get the json representation of this class.
   * @returns {BaBackupResourceUpdateRequestJson}
   */
  get json(): BaBackupResourceUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
