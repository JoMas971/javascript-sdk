import { BaCompanyContractUpgradeRequestJson } from './__json__/upgrade-tenant-contract-request';

/* istanbul ignore next: autogenerated */
export class BaCompanyContractUpgradeRequest {

  private readonly _json: BaCompanyContractUpgradeRequestJson;

  constructor(baCompanyContractUpgradeRequest: BaCompanyContractUpgradeRequest);
  constructor(baCompanyContractUpgradeRequestJson: BaCompanyContractUpgradeRequestJson);
  constructor(additionalStorageInGB: number);
  constructor(firstParam: number | BaCompanyContractUpgradeRequest | BaCompanyContractUpgradeRequestJson) {
    if (typeof firstParam === 'number') {
      // Parameters constructor
      this._json = {
        additional_storage_in_gb: firstParam
      } as BaCompanyContractUpgradeRequestJson;
    } else if (firstParam instanceof BaCompanyContractUpgradeRequest) {
      // Copy constructor
      this._json = (firstParam as BaCompanyContractUpgradeRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as BaCompanyContractUpgradeRequestJson;
    }
  }

  /**
   * Get additional storage in gb.
   * @returns {number}
   */
  get additionalStorageInGb(): number {
    return this._json.additional_storage_in_gb;
  }

  /**
   * Get the json representation of this class.
   * @returns {BaCompanyContractUpgradeRequestJson}
   */
  get json(): BaCompanyContractUpgradeRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
