import { BaBackupDirectoryListJson } from './__json__/ba-backup-directory-list-json';
import { BaBackupDirectory } from './ba-backup-directory';
import { BaBackupFilterParams } from '../ba-backup-filter-params';

/**
 * BaBackupDirectoryList class
 */

/* istanbul ignore next: autogenerated */
export class BaBackupDirectoryList {

  constructor(private _json: BaBackupDirectoryListJson) {
  }

  /**
   * Get current page parameters.
   * @returns {BaBackupFilterParams}
   */
  get currentPageParameters(): BaBackupFilterParams {
    return new BaBackupFilterParams(this._json.current_page_parameters);
  }

  /**
   * Get next page parameters.
   * @returns {BaBackupFilterParams}
   */
  get nextPageParameters(): BaBackupFilterParams {
    return new BaBackupFilterParams(this._json.next_page_parameters);
  }

  /**
   * Get total records.
   * @returns {number}
   */
  get totalRecords(): number {
    return this._json.total_records;
  }

  /**
   * Get last page.
   * @returns {boolean}
   */
  get lastPage(): boolean {
    return this._json.last_page;
  }

  /**
   * Get data.
   * @returns {Array<BaBackupDirectory>}
   */
  get data(): Array<BaBackupDirectory> {
    return this._json.data.map(data => new BaBackupDirectory(data));
  }

  /**
   * Get the json representation of this class.
   * @returns {BaBackupDirectoryListJson}
   */
  get json(): BaBackupDirectoryListJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
